version: "3.0"

services:
  backend:
    volumes:
      - ./backend:/app
    build:
      context: .
      dockerfile: docker/python/Dockerfile
    environment:
      - USER_NAME
      - USER_ID
      - GROUP_NAME
      - GROUP_ID
    ports:
      - 8080:8080
    networks:
      - blog-app-net

  frontend:
    build:
      context: .
      dockerfile: docker/nodejs/Dockerfile
    volumes:
      - ./frontend:/src # ローカルをコンテナ内にマウント
    command: sh -c "cd src && yarn dev"
    ports:
      - "3000:3000"
    environment:
      # - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - USER_NAME
      - USER_ID
      - GROUP_NAME
      - GROUP_ID
    networks:
      - blog-app-net

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - blog-app-net

  db:
    image: mysql:8.0
    volumes:
      - db-store:/var/lib/mysql
      - ./logs:/var/log/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    environment:
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASS}
      - MYSQL_ROOT_PASSWORD=${DB_PASS}
      - TZ=${TZ}
    ports:
      - ${DB_PORT}:3306
    networks:
      - blog-app-net

volumes:
  db-store:

networks:
  blog-app-net:
    driver: bridge